diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..615aafb
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,3 @@
+{
+    "python.pythonPath": "/usr/bin/python3"
+}
\ No newline at end of file
diff --git a/api/__pycache__/__init__.cpython-38.pyc b/api/__pycache__/__init__.cpython-38.pyc
index b93064a..77cc599 100644
Binary files a/api/__pycache__/__init__.cpython-38.pyc and b/api/__pycache__/__init__.cpython-38.pyc differ
diff --git a/api/src/__pycache__/__init__.cpython-38.pyc b/api/src/__pycache__/__init__.cpython-38.pyc
index 2eb6849..16d8391 100644
Binary files a/api/src/__pycache__/__init__.cpython-38.pyc and b/api/src/__pycache__/__init__.cpython-38.pyc differ
diff --git a/api/src/adapters/__pycache__/__init__.cpython-38.pyc b/api/src/adapters/__pycache__/__init__.cpython-38.pyc
index 2a03637..cfd4300 100644
Binary files a/api/src/adapters/__pycache__/__init__.cpython-38.pyc and b/api/src/adapters/__pycache__/__init__.cpython-38.pyc differ
diff --git a/api/src/adapters/__pycache__/client.cpython-38.pyc b/api/src/adapters/__pycache__/client.cpython-38.pyc
index 2707220..869e46a 100644
Binary files a/api/src/adapters/__pycache__/client.cpython-38.pyc and b/api/src/adapters/__pycache__/client.cpython-38.pyc differ
diff --git a/api/src/adapters/__pycache__/companies_builder.cpython-38.pyc b/api/src/adapters/__pycache__/companies_builder.cpython-38.pyc
index 1c63fd6..add9e6c 100644
Binary files a/api/src/adapters/__pycache__/companies_builder.cpython-38.pyc and b/api/src/adapters/__pycache__/companies_builder.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/__init__.py b/api/src/adapters/api_calls/__init__.py
index 2626199..4af1d0b 100644
--- a/api/src/adapters/api_calls/__init__.py
+++ b/api/src/adapters/api_calls/__init__.py
@@ -2,4 +2,5 @@ import api.src.adapters as adapters
 import api.data as data
 from .helpers import *
 from .historical_stock_price import *
-from .quarterly_reports import *
\ No newline at end of file
+from .quarterly_reports import *
+from .company_info_via_intrinio_n_sp500_csv import *
diff --git a/api/src/adapters/api_calls/__pycache__/__init__.cpython-38.pyc b/api/src/adapters/api_calls/__pycache__/__init__.cpython-38.pyc
index d60f66b..f17c9b1 100644
Binary files a/api/src/adapters/api_calls/__pycache__/__init__.cpython-38.pyc and b/api/src/adapters/api_calls/__pycache__/__init__.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/__pycache__/api_client_config.cpython-38.pyc b/api/src/adapters/api_calls/__pycache__/api_client_config.cpython-38.pyc
index 574577f..349d296 100644
Binary files a/api/src/adapters/api_calls/__pycache__/api_client_config.cpython-38.pyc and b/api/src/adapters/api_calls/__pycache__/api_client_config.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/__pycache__/company_info_via_intrinio_n_sp500_csv.cpython-38.pyc b/api/src/adapters/api_calls/__pycache__/company_info_via_intrinio_n_sp500_csv.cpython-38.pyc
new file mode 100644
index 0000000..56cf73c
Binary files /dev/null and b/api/src/adapters/api_calls/__pycache__/company_info_via_intrinio_n_sp500_csv.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/__pycache__/helpers.cpython-38.pyc b/api/src/adapters/api_calls/__pycache__/helpers.cpython-38.pyc
index cd04340..b22522c 100644
Binary files a/api/src/adapters/api_calls/__pycache__/helpers.cpython-38.pyc and b/api/src/adapters/api_calls/__pycache__/helpers.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/__pycache__/historical_stock_price.cpython-38.pyc b/api/src/adapters/api_calls/__pycache__/historical_stock_price.cpython-38.pyc
index e33343f..3b676f4 100644
Binary files a/api/src/adapters/api_calls/__pycache__/historical_stock_price.cpython-38.pyc and b/api/src/adapters/api_calls/__pycache__/historical_stock_price.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/__pycache__/quarterly_reports.cpython-38.pyc b/api/src/adapters/api_calls/__pycache__/quarterly_reports.cpython-38.pyc
index 5f5fac9..9084bd8 100644
Binary files a/api/src/adapters/api_calls/__pycache__/quarterly_reports.cpython-38.pyc and b/api/src/adapters/api_calls/__pycache__/quarterly_reports.cpython-38.pyc differ
diff --git a/api/src/adapters/api_calls/company_info_via_intrinio_n_sp500_csv.py b/api/src/adapters/api_calls/company_info_via_intrinio_n_sp500_csv.py
index 86299f0..e0d1c60 100644
--- a/api/src/adapters/api_calls/company_info_via_intrinio_n_sp500_csv.py
+++ b/api/src/adapters/api_calls/company_info_via_intrinio_n_sp500_csv.py
@@ -6,7 +6,8 @@
 
 import intrinio_sdk as intrinio
 from intrinio_sdk.rest import ApiException
-from helpers import activate_intrinio_api
+from .helpers import activate_intrinio_api
+import csv
 
 # from read_dow_jones_tickers import *
 
@@ -33,11 +34,8 @@ def company_info_via_intrinio_api_n_sp500_csv(ticker:str,
         
         return company_info_dict
 
-    def company_info_via_sp500_csv(ticker, company_dict,
-                                   filepath= './data/sp500/S&P500-Info.csv'):
-        """
-        param ticker: string
-        """
+    def company_info_via_sp500_csv(ticker: str, company_dict,
+                                   filepath= 'api/data/sp500/S&P500-Info.csv'):
         with open(filepath) as csvfile:
             reader = csv.DictReader(csvfile)
             for row in reader:
diff --git a/api/src/db/__pycache__/__init__.cpython-38.pyc b/api/src/db/__pycache__/__init__.cpython-38.pyc
index 6381064..6403eac 100644
Binary files a/api/src/db/__pycache__/__init__.cpython-38.pyc and b/api/src/db/__pycache__/__init__.cpython-38.pyc differ
diff --git a/api/src/db/__pycache__/db.cpython-38.pyc b/api/src/db/__pycache__/db.cpython-38.pyc
index 2cd837a..8676af3 100644
Binary files a/api/src/db/__pycache__/db.cpython-38.pyc and b/api/src/db/__pycache__/db.cpython-38.pyc differ
diff --git a/api/src/db/migrations/create_tables.sql b/api/src/db/migrations/create_tables.sql
index 8d67308..7e775b6 100644
--- a/api/src/db/migrations/create_tables.sql
+++ b/api/src/db/migrations/create_tables.sql
@@ -1,7 +1,7 @@
 DROP TABLE IF EXISTS companies;
-DROP TABLE IF EXISTS sectors;
-DROP TABLE IF EXISTS prices;
-DROP TABLE IF EXISTS financials;
+DROP TABLE IF EXISTS sub_industries;
+DROP TABLE IF EXISTS prices_pe;
+DROP TABLE IF EXISTS quarterly_reports;
 
 CREATE TABLE IF NOT EXISTS companies (
   id serial PRIMARY KEY,
@@ -22,6 +22,7 @@ CREATE TABLE IF NOT EXISTS sub_industries(
 
 CREATE TABLE IF NOT EXISTS prices_pe(
 	id serial PRIMARY KEY,
+  date DATE,
   company_id INTEGER,
 	closing_price FLOAT,
 	price_earnings_ratio FLOAT
@@ -31,7 +32,6 @@ CREATE TABLE IF NOT EXISTS quarterly_reports (
   id serial PRIMARY KEY,
   date DATE,
   company_id INTEGER,
-  closing_price FLOAT,
   revenue BIGINT,
   cost BIGINT,
   net_income BIGINT,
diff --git a/api/src/models/__pycache__/__init__.cpython-38.pyc b/api/src/models/__pycache__/__init__.cpython-38.pyc
index 7125ef1..c1bf098 100644
Binary files a/api/src/models/__pycache__/__init__.cpython-38.pyc and b/api/src/models/__pycache__/__init__.cpython-38.pyc differ
diff --git a/api/src/models/__pycache__/company.cpython-38.pyc b/api/src/models/__pycache__/company.cpython-38.pyc
index 7bd6636..303aeb1 100644
Binary files a/api/src/models/__pycache__/company.cpython-38.pyc and b/api/src/models/__pycache__/company.cpython-38.pyc differ
diff --git a/api/src/models/__pycache__/price_pe.cpython-38.pyc b/api/src/models/__pycache__/price_pe.cpython-38.pyc
index 30d4f8e..3aa55b6 100644
Binary files a/api/src/models/__pycache__/price_pe.cpython-38.pyc and b/api/src/models/__pycache__/price_pe.cpython-38.pyc differ
diff --git a/api/src/models/__pycache__/quarterly_report.cpython-38.pyc b/api/src/models/__pycache__/quarterly_report.cpython-38.pyc
index 1aae957..444c9c9 100644
Binary files a/api/src/models/__pycache__/quarterly_report.cpython-38.pyc and b/api/src/models/__pycache__/quarterly_report.cpython-38.pyc differ
diff --git a/api/src/models/__pycache__/sub_industry.cpython-38.pyc b/api/src/models/__pycache__/sub_industry.cpython-38.pyc
index 44c9c6a..6676ac7 100644
Binary files a/api/src/models/__pycache__/sub_industry.cpython-38.pyc and b/api/src/models/__pycache__/sub_industry.cpython-38.pyc differ
diff --git a/console.py b/console.py
index 4d009a9..6ef4ce7 100644
--- a/console.py
+++ b/console.py
@@ -34,21 +34,22 @@ def build_quarterly_reports(companies_quarterly_reports_list: list,
             quarterly_reports_builder.run(quarterly_report, conn, cursor)
 
 # PricePE build_extract function 
-def build_prices_pe(ticker: str):
-    """
-    Generate a list of one company's quarterly reports, each a QuarterlyReport object
-
-    Based on the date of each quarterly report, obtains the closing price, then
-    calucates the price / earnings ratio, before writing the row of data
-    into the prices_pe table. 
-    """
-    quarterly_reports_objs_list = (models.QuarterlyReport.
-                                        find_quarterly_reports_by_ticker(ticker, db.cursor))
-    price_pe_builder = adapters.PricePEbuilder()
-    price_pe_builder.run(quarterly_reports_objs_list, db.conn, db.cursor)
+def build_prices_pe_list(tickers_list):
+    def build_prices_pe(ticker: str):
+        """
+        Generate a list of one company's quarterly reports, each a QuarterlyReport object
 
-for ticker in ['PFE', 'JNJ', 'AAPL', 'WMT']:
-    build_prices_pe(ticker)
+        Based on the date of each quarterly report, obtains the closing price, then
+        calucates the price / earnings ratio, before writing the row of data
+        into the prices_pe table. 
+        """
+        quarterly_reports_objs_list = (models.QuarterlyReport.
+                                            find_quarterly_reports_by_ticker(ticker, db.cursor))
+        price_pe_builder = adapters.PricePEbuilder()
+        price_pe_builder.run(quarterly_reports_objs_list, db.conn, db.cursor)
+
+    for ticker in tickers_list:
+        build_prices_pe(ticker)
 
 
 """
@@ -61,6 +62,16 @@ sub_industry_builder = adapters.SubIndustryBuilder()
 for sub_industry_info in sub_industries_3:
     sub_industry_builder.run(sub_industry_info, db.conn, db.cursor)
 
+---
+# 1/11/2021
+four_companies = ['PFE', 'JNJ', 'AAPL', 'WMT']
+four_companies_info  = extract_companies_info(four_companies)
+build_companies(four_companies_info)
+four_companies_reports = extract_quarterly_reports(four_companies)
+build_quarterly_reports(four_companies_reports)
+
+build_prices_pe_list(four_companies)
+
 ---
 build_companies
 
diff --git a/frontend/multi_select1.py b/frontend/multi_select1.py
index 6d37d48..0a32fa5 100644
--- a/frontend/multi_select1.py
+++ b/frontend/multi_select1.py
@@ -18,31 +18,32 @@ def find_companies_by_sector(sector):
     selected_sector = requests.get(SECTOR_URL, params = {'sector': sector})
     return selected_sector.json()
 
-def avg_element_wise_list(list_of_tuples: list):
+def element_wise_avg_list(companies_pe_history_list: list):
     """
-    Turns a list of tuples into a list of element-wise average numbers.
+    Turns a list of lists into a list of element-wise average numbers.
     """
-    sum_element_wise_list = (reduce(lambda x, y: [tup[0] + tup[1] for tup in zip(x,y)], list_of_tuples) 
-                                if type(list_of_tuples[0]) == tuple 
-                                else list_of_tuples)
-    if type(list_of_tuples[0]) == tuple:
-        number_companies = len(list_of_tuples)
-        return list(map(lambda sum_element_wise: sum_element_wise/ number_companies,
-                            sum_element_wise_list))
+    if len(companies_pe_history_list) > 1:
+        sum_element_wise_list = reduce(lambda x, y: [tup[0] + tup[1] for tup in zip(x,y)], 
+                                                                        companies_pe_history_list) 
+        number_companies = len(companies_pe_history_list)
+        average_pe_history_list =  list(
+                                        map(lambda sum_total_element_wise: 
+                                                        sum_total_element_wise/ number_companies,
+                                                                        sum_element_wise_list))
     else:
-        return list_of_tuples
-
+        average_pe_history_list = companies_pe_history_list
+    return average_pe_history_list
     
-selected_sectors = st.multiselect(
+all_sectors = st.multiselect(
                         'Industry sectors',
                     ['Health Care', 'Information Technology', 'Consumer Staples'],
                     ['Health Care', 'Information Technology', 'Consumer Staples'])
 
 # plot each sector's average price/quarter-earnings ratio over 4 quarters
 fig = go.Figure()
-for sector in selected_sectors:
+for sector in all_sectors:
     companies_by_sector = find_companies_by_sector(sector)
-    pe_list = []
+    dates_pe_list = []
     for company in companies_by_sector:
         ticker = company['ticker']
         company_info = find_company_by_ticker(ticker)
@@ -51,14 +52,15 @@ for sector in selected_sectors:
                                                 'History of quarterly Closing Price and Price to Earnings ratios']]
         date_history = [datetime.strptime(quarter['date'], "%Y-%m-%d") for quarter in company_info[
                                                 'History of quarterly Closing Price and Price to Earnings ratios']]
-        pe_list.append(dict(zip(date_history, pe_history)))
-
-    companies_pe_history_list = [company_quarterly_pe
-                                        for company_pe_history_dict in pe_list 
-                                                for company_quarterly_pe in company_pe_history_dict.values()]
-    quarterly_average_pe_history = avg_element_wise_list(companies_pe_history_list)
-    quarter_ending_dates_history = [key for key in pe_list[0].keys()] 
-    
+        dates_pe_list.append(dict(zip(date_history, pe_history)))
+
+    companies_pe_history_list = [list(company_pe_history_dict.values())
+                                                            for company_pe_history_dict in dates_pe_list]                                      
+    quarterly_average_pe_history = element_wise_avg_list(companies_pe_history_list)
+    quarter_ending_dates_history = [key for key in dates_pe_list[0].keys()] 
+    print(sector)
+    print(quarterly_average_pe_history)
+    print(dates_pe_list)
 
     # y, x axis, respectively, above
     # average quarterly p/e ratio trace for each sector    
diff --git a/frontend/prototyping_map_reduce.py b/frontend/prototyping_map_reduce.py
index ac628b0..f06aa7a 100644
--- a/frontend/prototyping_map_reduce.py
+++ b/frontend/prototyping_map_reduce.py
@@ -1,8 +1,18 @@
-a = (1, 2, 3, 4)
-b = (5, 6, 7, 8)
-d = (10, 11, 12, 13)
+a = [1, 2, 3, 4]
+b = [5, 6, 7, 8]
 c= [a, b]
 
+print(c)
+# nest for loops
+number_rows = len(c)
+number_columns = len(c[0])
+
+tuples_list = []
+for lst in c:
+    tuples_list
+
+d = (10, 11, 12, 13)
+
 def sum_elements_two_lists(list1, list2):
     return [tupl[0] + tupl[1] for tupl in zip(list1, list2)]
 
diff --git a/venv/lib64 b/venv/lib64
new file mode 120000
index 0000000..7951405
--- /dev/null
+++ b/venv/lib64
@@ -0,0 +1 @@
+lib
\ No newline at end of file
diff --git a/venv/pyvenv.cfg b/venv/pyvenv.cfg
index f16b4a1..8dbc2ba 100644
--- a/venv/pyvenv.cfg
+++ b/venv/pyvenv.cfg
@@ -1,3 +1,3 @@
-home = /usr/local/bin
+home = /usr/bin
 include-system-site-packages = false
 version = 3.8.5
